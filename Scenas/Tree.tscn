[gd_scene load_steps=4 format=2]

[ext_resource path="res://Images/tree1.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends StaticBody2D

export var growing_interval = 1
export var growing_scale = 0.1
export var seed_interval_min = 1
export var seed_interval_max = 5

enum State {
	GROWING,
	ADULT,
	BURN
}
export(State) var state = State.GROWING

signal seed_dropped(tree_item)

func _ready():
	randomize()
	var i = int(rand_range(1,5))
	$Sprite.texture = load(\"res://Images/tree%s.png\" % str(i))

	if state == State.GROWING:
		scale.x = 0.3
		scale.y = 0.3
	set_timer()

func set_timer():
	if state == State.GROWING:
		#Set timer to next growing size
		$Timer.start(growing_interval)
	elif state == State.ADULT:
		#Set timer to next seed
		$Timer.start(int(rand_range(seed_interval_min, seed_interval_max)))
	#No timer for burned object

func burn():
	$Sprite.texture = load(\"res://Images/tree.png\")
	state = State.BURN

func _on_Timer_timeout():
	if state == State.GROWING:
		if scale.x < 1:
			scale.x += growing_scale
			scale.y += growing_scale
		if scale.x >= 1:
			scale.x = 1
			scale.y = 1
			state = State.ADULT
	elif state == State.ADULT:
		#print(name, \" drops seed\")
		emit_signal(\"seed_dropped\", self)
	set_timer()
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 12.1068, 14.4 )

[node name="Tree" type="StaticBody2D" groups=[
"Bodies",
"Tree",
"Trees",
]]
collision_layer = 5
collision_mask = 0
script = SubResource( 1 )
seed_interval_min = 10
seed_interval_max = 50

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -2.78109, -1.9865 )
shape = SubResource( 2 )

[node name="Timer" type="Timer" parent="."]
one_shot = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
